# Project plan

## Start-up phase
<!--
Covering the planning phase, this section should provide a relatively
detailed plan of how work will start on the project. This section is
important because projects need to get up and running quickly.

 - [ ] Setting up collaboration platform inc. code for contributors etc.
 - [ ] Licence decisions
 - [ ] Reporting framework
-->

To enable collaboration and contributions, we will set up the project on
GitHub. The repository will include guidelines for contributors, a code of
conduct, and a `README.md` file with an overview of the project.

A project team will be set up to track tasks and milestones, and issues
will be used for feature requests and bug reports. Reporting will be done
quarterly, with updates shared on the R Consortium blog and social media
platforms to keep the community informed of progress.

We aim to release `momer` under the permissive Apache 2.0 license which is
compatible with the BSD-3-Clause license of `momepy`. `momer` will only wrap
`momepy`, i.e., call it at runtime, which means that no BSD-licensed code is
redistributed and so mentioning the license in the documentation should suffice.

## Technical delivery
<!--
Covering the actual delivery of the project this section should
provide at least a high-level description of the implementation.

Including target dates is really important as you need to be committed
and the ISC need to have a means of tracking delivery
-->

The project will be structured by the following milestones:

1. Initial setup and basic wrappers (Month 1-4):
   - Set up the GitHub repository with contribution guidelines.
   - Set up R package skeleton with installation instructions.
   - Configure `reticulate` and document environment setup instructions.
   - Reuse or write reliable helper functions for bidirectional data conversion between Python `geopandas` and R `sf` objects, as well as Python `networkx` and R `sfnetwork` objects, also considering edge cases.
   - Benchmark processing overhead of data conversion layer.
   - Wrap 5-10 core `momepy` functions.
   - Test wrapped functions on sample dataset and workflow.
   - Add basic documentation.
   
2. Comprehensive wrappers and testing (Month 5-7):
   - Develop a suite of unit tests and integration tests to ensure reliability and correctness.
   - Expand wrappers to cover major functionalities of `momepy`.
   - Ensure compatibility with tidy workflows.
   - Draft detailed documentation for each wrapped function.
   
3. Documentation and vignettes (Month 8-10):
   - Set up documentation synchronisation workflow between `momepy` and `momer`.
   - Generate comprehensive documentation, including examples.
   - Set up `pkgdown` website with API reference.
   - Create vignettes demonstrating typical workflows and applications of `momer`.
   - Conduct user testing and gather feedback for improvements.
   
4. Final review, maintenance setup, and release (Month 11-12):
   - Address any issues or feedback from user testing.
   - Perform a final review of the code base and documentation.
   - Set up GitHub Actions for CI.
   - Prepare for the official release of `momer` on CRAN and GitHub.
   - Publicize the release through blog posts, social media, and relevant forums.
   - Disseminate in the developer community (e.g., SDSL, ISUF, Rbanism) to attract contributions.

## Other aspects

<!--
How will you ensure that your work is available to the widest number
of people? Please specify the open-source or creative commons license(s)
you will use, how you will host your code so that others can contribute,
and how you will publicize your work. We encourage you to plan content
to be shared quarterly on the R Consortium blog.

 - [ ] Announcement post
 - [ ] Delivery blog post
 - [ ] Social media
 - [ ] UseR!
 - [ ] ISC meetings
-->

The project will be open-source, hosted on GitHub, and licensed under the Apache
2.0 license. This will enable broad use and contributions from the community.

Updates on progress and milestones achieved will be shared on the R Consortium
blog and on the Rbanism community's blog on a quarterly basis. Updates will
also be shared on the social media platforms Mastodon (Fosstodon), LinkedIn and
Bluesky. To promote the wide adoption of `momer`, we will announce its release
at the UseR! conference and other similar events where the R spatial community
is present. We also aim to introduce the package in the International Seminar
of Urban Form (ISUF) where most of the research community conducting urban
morphology analysis is present.

## Budget & funding plan

<!--
Outline the milestones for development and how much funding will be
required for each stage (as payments will be tied to project milestone
completion). Each milestone should specify the work to be done and the
expected outcomes, providing enough detail for the ISC to understand
the scope of the project work and assess the likelihood of success.

We expect that most of the budget will be allocated
for labor costs. We do not cover indirect costs. The ISC grants cannot
cover such things as travel, lodging, food, journal publication fees,
or personal hardware. Cloud services may be covered if they are specific
to the project and the project period. The ISC reserves the right to vet
how funds are used for each project separately. If in doubt, please reach
out to us.
-->

The requested budget will be used for labor costs divided by period, as follows:

1. Initial set-up and basic wrappers (Month 1-2): €8,000
2. Comprehensive wrappers and testing (Month 3-6): €16,000
3. Documentation and vignettes (Month 7-10): €16,000
4. Final review and release (Month 11-12): €8,000

Total: €40,000

::: callout-note
Is this budget reasonable? To be discussed with ISC committee member, former ISC grantee, and/or anyone experienced in writing a similar wrapper.
:::
