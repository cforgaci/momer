# Executive Summary

<!--
This section provides a condensed view of the entire proposal, one page long.
It should be a comprehensive high-level overview that captures the essence of the proposal, including its goals, methods, expected outcomes, deliverables, and budget.
-->

Urban morphometrics is an emerging field that leverages computational techniques and large open datasets to analyse and understand the physical form of cities at unprecedented scale. The Python open-source library `momepy` [@fleischmann2019] has been instrumental in advancing this field as it has enabled researchers to carry out complex morphometric analyses and workflow with relative ease. Arguably, the potential of `momepy` reaches way beyond Python, and its adoption in the broader scientific community and practice could be significantly enhanced by integrating it with R.

`momer` is an R package meant to bridge this gap by providing a seamless interface to `momepy` functionalities within the R environment. This integration will empower R users to use the capabilities of `momepy` for urban morphometric analyses without needing to switch between programming languages. Support from the Rbanism community, the r-spatial community, and the Spatial Data Science across Languages community confirms the domain-specific relevance for R users and the potential cross-language impact of this project.

`momer` will be implemented as a wrapper around `momepy` using the `reticulate` package. The package will mirror `momepy`'s modules and core functionalities. The package will also include comprehensive documentation and vignettes to guide users through typical workflows. Our ambition is to set up a workflow triggered by every `momepy` release that automatically updates the documentation of `momer` to reflect any changes in `momepy`. This will ensure that `momer` remains up-to-date with the latest features and improvements in `momepy`. We expect this to be feasible considering the upcoming release of `momepy` v1.0.0, which is expected to have a stable API and documentation structure.